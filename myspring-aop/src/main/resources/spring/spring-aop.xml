<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	<!--启用Annotation注解配置,新版本不用写 -->
	<context:annotation-config />
	<!--定义注解的扫描包,必须配置好扫描包之后才可以扫描该包中出现的注解信息 -->
	<context:component-scan base-package="cn.unicorn.myspring" />
	<!--自定义aop的实现 -->
	<aop:config><!--进行AOP的配置处理 -->
		<!--配置切入点表达式,这个表达式直接决定了最终到底在哪里去执行代理操作,该操作引入了AspectJ的设计语法 -->
		<aop:pointcut id="myPointcut"
			expression="execution(public * cn.unicorn..service..*.*(..))" />
		<aop:aspect ref="serviceAdvice"><!--进行切入处理的操作方法定义,所以要设置好切入的程序类名称 -->
			<aop:before method="handleBefore" pointcut-ref="myPointcut" />
			<aop:after method="handleAfter" pointcut-ref="myPointcut" />
		</aop:aspect>
	</aop:config>
</beans>
